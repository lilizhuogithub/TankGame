Index: src/com/lizhuo/tankgame4/Shot.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lizhuo.tankgame4;\r\n\r\n/**\r\n *射击的子弹\r\n */\r\npublic class Shot implements Runnable{\r\n    int x;    //子弹x坐标\r\n    int y;    //子弹y坐标\r\n    int direct = 0;    //子弹方向\r\n    int speed = 2;    //子弹速度\r\n    boolean isLive = true;    //子弹是否存活\r\n\r\n    public Shot(int x, int y, int direct) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.direct = direct;\r\n    }\r\n\r\n    @Override\r\n    public void run() {     //射击\r\n        while (true) {\r\n            //休眠50ms为了看到子弹的效果\r\n            try {\r\n                Thread.sleep(50);\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n            //根据方向改变x, y的坐标\r\n            switch (direct) {\r\n                case 0://上\r\n                    y -= speed;\r\n                    break;\r\n                case 1://右\r\n                    x += speed;\r\n                    break;\r\n                case 2://下\r\n                    y += speed;\r\n                    break;\r\n                case 3://左\r\n                    x -= speed;\r\n                    break;\r\n            }\r\n            //测试,这里输出x, y 坐标\r\n            System.out.println(\"子弹 x=\" + x + \"y=\" + y);\r\n            //当子弹移动到面板的边界时, 就应该销毁(把启动的子弹的线程销毁)\r\n            //当子弹碰到敌人坦克时，也应该结束线程\r\n            if (!(x >= 0 && x <= 1000 && y >= 0 && y <= 750 && isLive)) {\r\n                System.out.println(\"子弹线程退出\");\r\n                isLive = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n
===================================================================
--- src/com/lizhuo/tankgame4/Shot.java	(revision b3c03591edb806ff3ab652593193fa197566f936)
+++ src/com/lizhuo/tankgame5/Shot.java	(date 1712384125513)
@@ -1,4 +1,4 @@
-package com.lizhuo.tankgame4;
+package com.lizhuo.tankgame5;
 
 /**
  *射击的子弹
Index: src/com/lizhuo/tankgame4/lzTankGame04.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lizhuo.tankgame4;\r\n\r\nimport javax.swing.*;\r\n\r\n/**\r\n *画框\r\n */\r\npublic class lzTankGame04 extends JFrame {\r\n\r\n    //定义MyPanel\r\n    MyPanel mp = null;\r\n\r\n    public static void main(String[] args) {\r\n        lzTankGame04 lzTankGame01 = new lzTankGame04();\r\n\r\n    }\r\n\r\n    public lzTankGame04() {\r\n        mp = new MyPanel();    //初始化为空，构造器中完成初始化\r\n        //将mp放入到Thread, 并启动\r\n        new Thread(mp).start();\r\n        this.add(mp);    //把面板就是游戏绘制区域添加进来\r\n        this.setSize(1200, 950);\r\n        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        this.addKeyListener(mp);    //让JFrame监听键盘事件\r\n        this.setVisible(true);\r\n    }\r\n}\r\n
===================================================================
--- src/com/lizhuo/tankgame4/lzTankGame04.java	(revision b3c03591edb806ff3ab652593193fa197566f936)
+++ src/com/lizhuo/tankgame5/lzTankGame04.java	(date 1712384125529)
@@ -1,4 +1,4 @@
-package com.lizhuo.tankgame4;
+package com.lizhuo.tankgame5;
 
 import javax.swing.*;
 
Index: src/com/lizhuo/tankgame4/Tank.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lizhuo.tankgame4;\r\n\r\n/**\r\n *\r\n */\r\n\r\npublic class Tank {\r\n    private int x;    //坦克的横坐标\r\n    private int y;    //坦克的纵坐标\r\n    private int direct;    //坦克方向\r\n    private int speed = 1;    //坦克速度\r\n    boolean isLive = true;    //坦克是否存活\r\n\r\n    public Tank(int x, int y) {\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n    }\r\n\r\n    //增加坦克的移动方法\r\n    public void moveUp() {\r\n        this.y -= speed;\r\n    }\r\n\r\n    public void moveRight() {\r\n        this.x += speed;\r\n    }\r\n\r\n    public void moveDown() {\r\n        this.y += speed;\r\n    }\r\n\r\n    public void moveLeft() {\r\n        this.x -= speed;\r\n    }\r\n\r\n    public int getSpeed() {\r\n        return speed;\r\n    }\r\n\r\n    public void setSpeed(int speed) {\r\n        this.speed = speed;\r\n    }\r\n\r\n    public int getDirect() {\r\n        return direct;\r\n    }\r\n\r\n    public void setDirect(int direct) {\r\n        this.direct = direct;\r\n    }\r\n\r\n    public int getX() {\r\n        return x;\r\n    }\r\n\r\n    public void setX(int x) {\r\n        this.x = x;\r\n    }\r\n\r\n    public int getY() {\r\n        return y;\r\n    }\r\n\r\n    public void setY(int y) {\r\n        this.y = y;\r\n    }\r\n}\r\n\r\n\r\n
===================================================================
--- src/com/lizhuo/tankgame4/Tank.java	(revision b3c03591edb806ff3ab652593193fa197566f936)
+++ src/com/lizhuo/tankgame5/Tank.java	(date 1712384125533)
@@ -1,4 +1,4 @@
-package com.lizhuo.tankgame4;
+package com.lizhuo.tankgame5;
 
 /**
  *
Index: src/com/lizhuo/tankgame4/EnemyTank.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lizhuo.tankgame4;\r\n\r\nimport java.util.Vector;\r\n\r\n/**\r\n *敌人坦克\r\n */\r\npublic class EnemyTank extends Tank implements Runnable {\r\n\r\n    //在敌人坦克类, 使用Vector 保存多个Shot\r\n    Vector<Shot> shots = new Vector<>();\r\n    Boolean isLive = true;\r\n\r\n    public EnemyTank(int x, int y) {\r\n        super(x, y);\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n        while (true) {\r\n            //这里我们判断如果shots size() =0, 创建一颗子弹，放入到\r\n            //shots集合，并启动\r\n            if (isLive && shots.size() < 1) {\r\n                Shot s = null;\r\n                //判断坦克的方向，创建对应的子弹\r\n                switch (getDirect()) {\r\n                    case 0:\r\n                        s = new Shot(getX() + 20, getY(), 0);\r\n                        break;\r\n                    case 1:\r\n                        s = new Shot(getX() + 60, getY() + 20, 1);\r\n                        break;\r\n                    case 2: //向下\r\n                        s = new Shot(getX() + 20, getY() + 60, 2);\r\n                        break;\r\n                    case 3://向左\r\n                        s = new Shot(getX(), getY() + 20, 3);\r\n                        break;\r\n                }\r\n                shots.add(s);\r\n                //启动\r\n                new Thread(s).start();\r\n\r\n            }\r\n\r\n\r\n            //根据坦克的方向来继续移动\r\n            switch (getDirect()) {\r\n                case 0:\r\n                    //让坦克保持一个方向, 走30步\r\n                    for (int i = 0; i < 30; i++) {\r\n                        if (getY() > 0) {\r\n                            moveUp();\r\n                        }\r\n                        try {    //休眠一会,要不坦克就会瞬间移动\r\n                            Thread.sleep(50);\r\n                        } catch (InterruptedException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case 1:\r\n                    for (int i = 0; i < 30; i++) {\r\n                        if (getX() + 60 < 1000) {\r\n                            moveRight();\r\n                        }\r\n                        try {    //休眠一会,要不坦克就会瞬间移动\r\n                            Thread.sleep(50);\r\n                        } catch (InterruptedException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case 2:\r\n                    for (int i = 0; i < 30; i++) {\r\n                        if (getY() + 60 < 750) {\r\n                            moveDown();\r\n                        }\r\n\r\n                        try {    //休眠一会,要不坦克就会瞬间移动\r\n                            Thread.sleep(50);\r\n                        } catch (InterruptedException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case 3:\r\n                    for (int i = 0; i < 30; i++) {\r\n                        if (getX() > 0) {\r\n                            moveLeft();\r\n                        }\r\n                        try {    //休眠一会,要不坦克就会瞬间移动\r\n                            Thread.sleep(50);\r\n                        } catch (InterruptedException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n\r\n            }\r\n\r\n\r\n            //然后随机改变坦克的方向\r\n            setDirect((int)(Math.random() * 4));\r\n            if (!isLive) {\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n
===================================================================
--- src/com/lizhuo/tankgame4/EnemyTank.java	(revision b3c03591edb806ff3ab652593193fa197566f936)
+++ src/com/lizhuo/tankgame5/EnemyTank.java	(date 1712384125521)
@@ -1,4 +1,4 @@
-package com.lizhuo.tankgame4;
+package com.lizhuo.tankgame5;
 
 import java.util.Vector;
 
Index: src/com/lizhuo/tankgame4/MyPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lizhuo.tankgame4;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.KeyEvent;\r\nimport java.awt.event.KeyListener;\r\nimport java.util.Vector;\r\n\r\n\r\n/**\r\n * 坦克大战的绘图区域（画板）\r\n */\r\n//为了响应键盘事件，实现keyListener\r\n//为了让Panel 不停的重绘子弹, 需要将 MyPanel 实现 Runnable 接口, 当作一个线程使用\r\npublic class MyPanel extends JPanel implements KeyListener, Runnable {\r\n    //定义我的坦克\r\n    Hero hero = null;\r\n    //定义敌人坦克, 方到Vector中为了线程安全\r\n    Vector<EnemyTank> enemyTanks = new Vector<>();\r\n    int enemyTanksSize = 3;    //初始敌人坦克数量\r\n    //说明: 当子弹击中坦克时, 加入一个Bomb对象到bombs\r\n    Vector<Bomb> bombs = new Vector<>();    //定义一个Vector, 用于存放炸弹\r\n\r\n    //定义三张炸弹图片， 用于显示爆炸效果\r\n    Image image1 = null;\r\n    Image image2 = null;\r\n    Image image3 = null;\r\n\r\n    public MyPanel() {\r\n        this.hero = new Hero(800, 100);    //初始化自己的坦克\r\n        hero.setSpeed(1);    //设置坦克速度, 默认是1;\r\n        //初始化敌人坦克\r\n        for (int i = 0; i < enemyTanksSize; i++) {\r\n            //创建一个敌人坦克\r\n            EnemyTank enemyTank = new EnemyTank(100 * (i + 1), 0);\r\n            //设置方向\r\n            enemyTank.setDirect(2);\r\n            //启动敌人坦克线程, 让他动起来\r\n            new Thread(enemyTank).start();\r\n            //给该enemyTank加入一颗子弹\r\n            Shot shot = new Shot(enemyTank.getX() + 20, enemyTank.getY() + 60, enemyTank.getDirect());\r\n            //加入enemyTank的Vector成员\r\n            enemyTank.shots.add(shot);\r\n            //启动shot对象\r\n            new Thread(shot).start();\r\n            //加入\r\n            enemyTanks.add(enemyTank);\r\n        }\r\n        //初始化图片对象\r\n        image1 = Toolkit.getDefaultToolkit().getImage(Panel.class.getResource(\"/bomb_1.gif\"));\r\n        image2 = Toolkit.getDefaultToolkit().getImage(Panel.class.getResource(\"/bomb_2.gif\"));\r\n        image3 = Toolkit.getDefaultToolkit().getImage(Panel.class.getResource(\"/bomb_3.gif\"));\r\n\r\n    }\r\n\r\n    @Override\r\n    @SuppressWarnings(\"all\")\r\n    public void paint(Graphics g) {\r\n        super.paint(g);\r\n        g.fillRect(0, 0, 1000, 750);    //填充矩形，默认是黑色\r\n        //画出坦克-封装方法\r\n        if (hero.isLive && hero != null) {\r\n            drawTank(hero.getX(), hero.getY(), g, hero.getDirect(), 1);    //画出我方坦克\r\n        }\r\n        for (EnemyTank enemyTank : enemyTanks) {    //画出敌人坦克\r\n            //判断当前坦克是否还存活\r\n            if (enemyTank.isLive) {\r\n                drawTank(enemyTank.getX(), enemyTank.getY(), g, enemyTank.getDirect(), 0);\r\n                //画出 enemyTank 所有的子弹\r\n                for (int i = 0; i < enemyTank.shots.size(); i++) {\r\n                    //取出子弹\r\n                    Shot shot = enemyTank.shots.get(i);\r\n                    //绘制\r\n                    if (shot.isLive) {\r\n                        g.draw3DRect(shot.x, shot.y, 1, 1, false);\r\n                    } else {\r\n                        //从Vector移除\r\n                        enemyTank.shots.remove(shot);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //画出hero射击的子弹\r\n        if (hero.shot != null && hero.shot.isLive == true) {\r\n            g.draw3DRect(hero.shot.x, hero.shot.y, 1, 1, false);\r\n        }\r\n\r\n        //如果bombs中 有对象, 就画出\r\n        for (int i = 0; i < bombs.size(); i++) {\r\n            //取出炸弹\r\n            Bomb bomb = bombs.get(i);\r\n            //根据当前这个bomb对象的life值去画出对应的图片\r\n            if (bomb.life > 6) {\r\n                g.drawImage(image1, bomb.x, bomb.y, 60, 60, this);\r\n            } else if (bomb.life > 3) {\r\n                g.drawImage(image1, bomb.x, bomb.y, 60, 60, this);\r\n            } else {\r\n                g.drawImage(image1, bomb.x, bomb.y, 60, 60, this);\r\n            }\r\n            //让炸弹的生命值减少\r\n            bomb.lifeDown();\r\n            //如果炸弹的生命值为0, 就从bombs的集合中删除\r\n            if (bomb.life == 0) {\r\n                bombs.remove(bomb);\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    //编写方法，画出坦克\r\n\r\n    /**\r\n     * @param x      坦克的左上角x坐标\r\n     * @param y      坦克的左上角y坐标\r\n     * @param g      画笔\r\n     * @param direct 坦克的方向\r\n     * @param type   坦克类型 (用颜色标记我的坦克，还是敌人的坦克)\r\n     */\r\n    @SuppressWarnings(\"all\")\r\n    public void drawTank(int x, int y, Graphics g, int direct, int type) {\r\n        switch (type) {\r\n            case 0:    //敌方坦克\r\n                g.setColor(Color.cyan);\r\n                break;\r\n            case 1:    //我方坦克\r\n                g.setColor(Color.yellow);\r\n                break;\r\n\r\n        }\r\n\r\n        switch (direct) {\r\n            case 0: //表示向上\r\n                g.fill3DRect(x, y, 10, 60, false);//画出坦克左边轮子\r\n                g.fill3DRect(x + 30, y, 10, 60, false);//画出坦克右边轮子\r\n                g.fill3DRect(x + 10, y + 10, 20, 40, false);//画出坦克盖子\r\n                g.fillOval(x + 10, y + 20, 20, 20);//画出圆形盖子\r\n                g.drawLine(x + 20, y + 30, x + 20, y);//画出炮筒\r\n                break;\r\n            case 1: //表示向右\r\n                g.fill3DRect(x, y, 60, 10, false);//画出坦克上边轮子\r\n                g.fill3DRect(x, y + 30, 60, 10, false);//画出坦克下边轮子\r\n                g.fill3DRect(x + 10, y + 10, 40, 20, false);//画出坦克盖子\r\n                g.fillOval(x + 20, y + 10, 20, 20);//画出圆形盖子\r\n                g.drawLine(x + 30, y + 20, x + 60, y + 20);//画出炮筒\r\n                break;\r\n            case 2: //表示向下\r\n                g.fill3DRect(x, y, 10, 60, false);//画出坦克左边轮子\r\n                g.fill3DRect(x + 30, y, 10, 60, false);//画出坦克右边轮子\r\n                g.fill3DRect(x + 10, y + 10, 20, 40, false);//画出坦克盖子\r\n                g.fillOval(x + 10, y + 20, 20, 20);//画出圆形盖子\r\n                g.drawLine(x + 20, y + 30, x + 20, y + 60);//画出炮筒\r\n                break;\r\n            case 3: //表示向左\r\n                g.fill3DRect(x, y, 60, 10, false);//画出坦克上边轮子\r\n                g.fill3DRect(x, y + 30, 60, 10, false);//画出坦克下边轮子\r\n                g.fill3DRect(x + 10, y + 10, 40, 20, false);//画出坦克盖子\r\n                g.fillOval(x + 20, y + 10, 20, 20);//画出圆形盖子\r\n                g.drawLine(x + 30, y + 20, x, y + 20);//画出炮筒\r\n                break;\r\n            default:\r\n                System.out.println(\"暂时不处理\");\r\n\r\n        }\r\n    }\r\n\r\n    public void hitEnemyTank() {\r\n        //判断是否集中了敌人坦克\r\n        if (hero.shot != null && hero.shot.isLive) {    //当我的子弹还存活\r\n            //遍历敌人所有的坦克\r\n            for (int i = 0; i < enemyTanks.size(); i++) {\r\n                EnemyTank enemyTank = enemyTanks.get(i);\r\n                hitTank(hero.shot, enemyTank);\r\n            }\r\n        }\r\n    }\r\n\r\n    //判断敌人坦克是否击中我的坦克\r\n    public void hitHero() {\r\n        //遍历所有的敌人坦克\r\n        for (int i = 0; i < enemyTanks.size(); i++) {\r\n            EnemyTank enemyTank = enemyTanks.get(i);\r\n            //遍历enemyTank对象的所有子弹\r\n            for (int j = 0; j < enemyTank.shots.size(); j++) {\r\n                //取出子弹\r\n                Shot shot = enemyTank.shots.get(j);\r\n                //判断shot是否击中我的坦克\r\n                if (hero.isLive && shot.isLive) {\r\n                    hitTank(shot, hero);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //编写方法，判断子弹是否击中坦克\r\n    //最好在run方法中判断\r\n    public void hitTank(Shot s, Tank tank) {\r\n        //判断子弹集中坦克\r\n        switch (tank.getDirect()) {\r\n            case 0:    //坦克向上\r\n            case 2:    //坦克向下\r\n                if (s.x > tank.getX() && s.x < tank.getX() + 40 &&\r\n                        s.y > tank.getY() && s.y < tank.getY() + 60) {\r\n                    s.isLive = false;\r\n                    tank.isLive = false;\r\n                    //当我的子弹击中敌人坦克后, 将enemyTank 从Vector中拿掉\r\n                    enemyTanks.remove(tank);\r\n                    //创建Bomb对象, 加入到bombs中\r\n                    Bomb bomb = new Bomb(tank.getX(), tank.getY());\r\n                    bombs.add(bomb);\r\n                }\r\n                break;\r\n            case 1:    //坦克向右\r\n            case 3:    //坦克向左\r\n                if (s.x > tank.getX() && s.x < tank.getX() + 60 &&\r\n                        s.y > tank.getY() && s.y < tank.getY() + 40) {\r\n                    s.isLive = false;\r\n                    tank.isLive = false;\r\n                    //当我的子弹击中敌人坦克后, 将enemyTank 从Vector中拿掉\r\n                    enemyTanks.remove(tank);\r\n                    //创建Bomb对象, 加入到bombs中\r\n                    Bomb bomb = new Bomb(tank.getX(), tank.getY());\r\n                    bombs.add(bomb);\r\n                }\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void keyTyped(KeyEvent e) {\r\n\r\n    }\r\n\r\n    //处理wsad按下的情况\r\n\r\n    @Override\r\n    @SuppressWarnings(\"all\")\r\n    public void keyPressed(KeyEvent e) {\r\n        if (e.getExtendedKeyCode() == KeyEvent.VK_W) {    //按下W键\r\n            //改变坦克的方向\r\n            hero.setDirect(0);\r\n            //修改坦克的坐标\r\n            if (hero.getY() > 0) {\r\n                hero.moveUp();\r\n            }\r\n\r\n        } else if (e.getExtendedKeyCode() == KeyEvent.VK_D) {    //按下D键\r\n            //改变坦克的方向\r\n            hero.setDirect(1);\r\n            if (hero.getX() + 60 < 1000) {\r\n                hero.moveRight();\r\n            }\r\n        } else if (e.getExtendedKeyCode() == KeyEvent.VK_S) {    //按下S键\r\n            //改变坦克的方向\r\n            hero.setDirect(2);\r\n            if (hero.getY() + 60 < 750) {\r\n                hero.moveDown();\r\n            }\r\n        } else if (e.getExtendedKeyCode() == KeyEvent.VK_A) {    //按下A键\r\n            //改变坦克的方向\r\n            hero.setDirect(3);\r\n            if (hero.getX() > 0) {\r\n                hero.moveLeft();\r\n            }\r\n        }\r\n\r\n        //如果用户按下的时J, 就发射\r\n        if (e.getExtendedKeyCode() == KeyEvent.VK_J) {\r\n            //判断hero的子弹是否销毁 第一次为空才触发子弹, 第二次使用判断子弹打到边界没有存活才触发\r\n            if (hero.shot == null || !hero.shot.isLive) {\r\n                hero.shotEnemyTank();\r\n            }\r\n        }\r\n        this.repaint();\r\n    }\r\n\r\n    @Override\r\n    public void keyReleased(KeyEvent e) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void run() {     //每隔 100毫秒, 重绘区域, 刷新绘图区域, 子弹就移动\r\n        while (true) {\r\n            try {\r\n                Thread.sleep(100);\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            //判断是我们子弹否击中了敌人坦克\r\n            hitEnemyTank();\r\n            //判断是敌人子弹否击中了我们的坦克\r\n            hitHero();\r\n            this.repaint();\r\n        }\r\n    }\r\n}\r\n
===================================================================
--- src/com/lizhuo/tankgame4/MyPanel.java	(revision b3c03591edb806ff3ab652593193fa197566f936)
+++ src/com/lizhuo/tankgame5/MyPanel.java	(date 1712384125549)
@@ -1,4 +1,4 @@
-package com.lizhuo.tankgame4;
+package com.lizhuo.tankgame5;
 
 import javax.swing.*;
 import java.awt.*;
Index: src/com/lizhuo/tankgame4/Hero.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lizhuo.tankgame4;\r\n\r\n/**\r\n *自己的坦克\r\n */\r\npublic class Hero extends Tank {\r\n    //定义一个Shot对象,表示一个射击(线程)\r\n    Shot shot = null;\r\n\r\n    public Hero(int x, int y) {\r\n        super(x, y);\r\n    }\r\n\r\n    //射击\r\n    public void shotEnemyTank() {\r\n        //发多颗子弹怎么办, 控制在我们的面板上，最多只有5颗\r\n//        if(shots.size() == 5) {\r\n//            return;\r\n//        }\r\n\r\n\r\n        //创建 Shot 对象, 根据当前 Hero 对象的位置和方向来创建Shot\r\n        switch (getDirect()){     //得到Hero对象的方向\r\n            case 0: //向上\r\n                shot = new Shot(getX() + 20, getY(), 0);\r\n                break;\r\n            case 1: //向右\r\n                shot = new Shot(getX() + 60, getY() + 20, 1);\r\n                break;\r\n            case 2: //向下\r\n                shot = new Shot(getX() + 20, getY() + 60, 2);\r\n                break;\r\n            case 3: //向左\r\n                shot = new Shot(getX(), getY() + 20, 3);\r\n                break;\r\n        }\r\n        //启动我的Shot线程\r\n        new Thread(shot).start();\r\n\r\n    }\r\n}\r\n
===================================================================
--- src/com/lizhuo/tankgame4/Hero.java	(revision b3c03591edb806ff3ab652593193fa197566f936)
+++ src/com/lizhuo/tankgame5/Hero.java	(date 1712384125504)
@@ -1,4 +1,4 @@
-package com.lizhuo.tankgame4;
+package com.lizhuo.tankgame5;
 
 /**
  *自己的坦克
Index: src/com/lizhuo/tankgame4/Bomb.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lizhuo.tankgame4;\r\n\r\n/**\r\n *\r\n */\r\npublic class Bomb {\r\n    int x, y;    //炸弹的坐标\r\n    int life = 9;    //炸弹的生命周期\r\n    boolean isLive = true;    //是否还存活\r\n\r\n    public Bomb(int x, int y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    //减少生命值\r\n    public void lifeDown() {\r\n        if (life > 0) {\r\n            life -= 1;\r\n        } else {\r\n            isLive = false;\r\n        }\r\n    }\r\n}\r\n
===================================================================
--- src/com/lizhuo/tankgame4/Bomb.java	(revision b3c03591edb806ff3ab652593193fa197566f936)
+++ src/com/lizhuo/tankgame5/Bomb.java	(date 1712384125541)
@@ -1,4 +1,4 @@
-package com.lizhuo.tankgame4;
+package com.lizhuo.tankgame5;
 
 /**
  *
