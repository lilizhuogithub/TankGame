Index: TankGame.iml
===================================================================
--- TankGame.iml	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ TankGame.iml	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
-    </content>
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-</module>
\ No newline at end of file
Index: src/com/lizhuo/tankgame4/Tank.java
===================================================================
--- src/com/lizhuo/tankgame4/Tank.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame4/Tank.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,69 +0,0 @@
-package com.lizhuo.tankgame4;
-
-/**
- *
- */
-
-public class Tank {
-    private int x;    //坦克的横坐标
-    private int y;    //坦克的纵坐标
-    private int direct;    //坦克方向
-    private int speed = 1;    //坦克速度
-
-    public Tank(int x, int y) {
-        this.x = x;
-        this.y = y;
-
-    }
-
-    //增加坦克的移动方法
-    public void moveUp() {
-        this.y -= speed;
-    }
-
-    public void moveRight() {
-        this.x += speed;
-    }
-
-    public void moveDown() {
-        this.y += speed;
-    }
-
-    public void moveLeft() {
-        this.x -= speed;
-    }
-
-    public int getSpeed() {
-        return speed;
-    }
-
-    public void setSpeed(int speed) {
-        this.speed = speed;
-    }
-
-    public int getDirect() {
-        return direct;
-    }
-
-    public void setDirect(int direct) {
-        this.direct = direct;
-    }
-
-    public int getX() {
-        return x;
-    }
-
-    public void setX(int x) {
-        this.x = x;
-    }
-
-    public int getY() {
-        return y;
-    }
-
-    public void setY(int y) {
-        this.y = y;
-    }
-}
-
-
Index: src/com/lizhuo/tankgame2/Tank.java
===================================================================
--- src/com/lizhuo/tankgame2/Tank.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame2/Tank.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,69 +0,0 @@
-package com.lizhuo.tankgame2;
-
-/**
- *
- */
-
-public class Tank {
-    private int x;    //坦克的横坐标
-    private int y;    //坦克的纵坐标
-    private int direct;    //坦克方向
-    private int speed = 1;    //坦克速度
-
-    public Tank(int x, int y) {
-        this.x = x;
-        this.y = y;
-
-    }
-
-    //增加坦克的移动方法
-    public void moveUp() {
-        this.y -= speed;
-    }
-
-    public void moveRight() {
-        this.x += speed;
-    }
-
-    public void moveDown() {
-        this.y += speed;
-    }
-
-    public void moveLeft() {
-        this.x -= speed;
-    }
-
-    public int getSpeed() {
-        return speed;
-    }
-
-    public void setSpeed(int speed) {
-        this.speed = speed;
-    }
-
-    public int getDirect() {
-        return direct;
-    }
-
-    public void setDirect(int direct) {
-        this.direct = direct;
-    }
-
-    public int getX() {
-        return x;
-    }
-
-    public void setX(int x) {
-        this.x = x;
-    }
-
-    public int getY() {
-        return y;
-    }
-
-    public void setY(int y) {
-        this.y = y;
-    }
-}
-
-
Index: src/com/lizhuo/tankgame2/EnemyTank.java
===================================================================
--- src/com/lizhuo/tankgame2/EnemyTank.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame2/EnemyTank.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,11 +0,0 @@
-package com.lizhuo.tankgame2;
-
-/**
- *敌人坦克
- */
-public class EnemyTank extends Tank {
-
-    public EnemyTank(int x, int y) {
-        super(x, y);
-    }
-}
Index: src/com/lizhuo/tankgame3/Tank.java
===================================================================
--- src/com/lizhuo/tankgame3/Tank.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame3/Tank.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,69 +0,0 @@
-package com.lizhuo.tankgame3;
-
-/**
- *
- */
-
-public class Tank {
-    private int x;    //坦克的横坐标
-    private int y;    //坦克的纵坐标
-    private int direct;    //坦克方向
-    private int speed = 1;    //坦克速度
-
-    public Tank(int x, int y) {
-        this.x = x;
-        this.y = y;
-
-    }
-
-    //增加坦克的移动方法
-    public void moveUp() {
-        this.y -= speed;
-    }
-
-    public void moveRight() {
-        this.x += speed;
-    }
-
-    public void moveDown() {
-        this.y += speed;
-    }
-
-    public void moveLeft() {
-        this.x -= speed;
-    }
-
-    public int getSpeed() {
-        return speed;
-    }
-
-    public void setSpeed(int speed) {
-        this.speed = speed;
-    }
-
-    public int getDirect() {
-        return direct;
-    }
-
-    public void setDirect(int direct) {
-        this.direct = direct;
-    }
-
-    public int getX() {
-        return x;
-    }
-
-    public void setX(int x) {
-        this.x = x;
-    }
-
-    public int getY() {
-        return y;
-    }
-
-    public void setY(int y) {
-        this.y = y;
-    }
-}
-
-
Index: .idea/vcs.xml
===================================================================
--- .idea/vcs.xml	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ .idea/vcs.xml	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="GitSharedSettings">
-    <option name="FORCE_PUSH_PROHIBITED_PATTERNS">
-      <list />
-    </option>
-  </component>
-  <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: src/com/lizhuo/tankgame3/EnemyTank.java
===================================================================
--- src/com/lizhuo/tankgame3/EnemyTank.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame3/EnemyTank.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,14 +0,0 @@
-package com.lizhuo.tankgame3;
-
-import java.util.Vector;
-
-/**
- *敌人坦克
- */
-public class EnemyTank extends Tank {
-
-
-    public EnemyTank(int x, int y) {
-        super(x, y);
-    }
-}
Index: src/com/lizhuo/tankgame2/Hero.java
===================================================================
--- src/com/lizhuo/tankgame2/Hero.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame2/Hero.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,12 +0,0 @@
-package com.lizhuo.tankgame2;
-
-/**
- *自己的坦克
- */
-public class Hero extends Tank {
-
-
-    public Hero(int x, int y) {
-        super(x, y);
-    }
-}
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/uiDesigner.xml	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ .idea/uiDesigner.xml	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,124 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="Palette2">
-    <group name="Swing">
-      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
-      </item>
-      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
-        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
-        <initial-values>
-          <property name="text" value="Button" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="RadioButton" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="CheckBox" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="Label" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
-          <preferred-size width="-1" height="20" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
-      </item>
-    </group>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/modules.xml
===================================================================
--- .idea/modules.xml	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ .idea/modules.xml	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/TankGame.iml" filepath="$PROJECT_DIR$/TankGame.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: src/com/lizhuo/tankgame3/Hero.java
===================================================================
--- src/com/lizhuo/tankgame3/Hero.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame3/Hero.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,35 +0,0 @@
-package com.lizhuo.tankgame3;
-
-/**
- *自己的坦克
- */
-public class Hero extends Tank {
-    //定义一个Shot对象,表示一个射击(线程)
-    Shot shot = null;
-
-    public Hero(int x, int y) {
-        super(x, y);
-    }
-
-    //射击
-    public void shotEnemyTank() {
-        //创建 Shot 对象, 根据当前 Hero 对象的位置和方向来创建Shot
-        switch (getDirect()){     //得到Hero对象的方向
-            case 0: //向上
-                shot = new Shot(getX() + 20, getY(), 0);
-                break;
-            case 1: //向右
-                shot = new Shot(getX() + 60, getY() + 20, 1);
-                break;
-            case 2: //向下
-                shot = new Shot(getX() + 20, getY() + 60, 2);
-                break;
-            case 3: //向左
-                shot = new Shot(getX(), getY() + 20, 3);
-                break;
-        }
-        //启动我的Shot线程
-        new Thread(shot).start();
-
-    }
-}
Index: .idea/.gitignore
===================================================================
--- .idea/.gitignore	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ .idea/.gitignore	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,8 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Datasource local storage ignored files
-/../../../../../../:\Users\19443\IdeaProjects\TankGame\.idea/dataSources/
-/dataSources.local.xml
-# Editor-based HTTP Client requests
-/httpRequests/
Index: src/com/lizhuo/tankgame2/lzTankGame02.java
===================================================================
--- src/com/lizhuo/tankgame2/lzTankGame02.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame2/lzTankGame02.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,26 +0,0 @@
-package com.lizhuo.tankgame2;
-
-import javax.swing.*;
-
-/**
- *画框
- */
-public class lzTankGame02 extends JFrame {
-
-    //定义MyPanel
-    MyPanel mp = null;
-
-    public static void main(String[] args) {
-        lzTankGame02 lzTankGame01 = new lzTankGame02();
-
-    }
-
-    public lzTankGame02() {
-        mp = new MyPanel();    //初始化为空，构造器中完成初始化
-        this.add(mp);    //把面板就是游戏绘制区域添加进来
-        this.setSize(1000, 750);
-        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-        this.addKeyListener(mp);    //让JFrame监听键盘事件
-        this.setVisible(true);
-    }
-}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ .idea/misc.xml	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
-    <output url="file://$PROJECT_DIR$/out" />
-  </component>
-</project>
\ No newline at end of file
Index: src/com/lizhuo/tankgame1/lzTankGame01.java
===================================================================
--- src/com/lizhuo/tankgame1/lzTankGame01.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame1/lzTankGame01.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,25 +0,0 @@
-package com.lizhuo.tankgame1;
-
-import javax.swing.*;
-
-/**
- *画框
- */
-public class lzTankGame01 extends JFrame {
-
-    //定义MyPanel
-    MyPanel mp = null;
-
-    public static void main(String[] args) {
-        lzTankGame01 lzTankGame01 = new lzTankGame01();
-
-    }
-
-    public lzTankGame01() {
-        mp = new MyPanel();    //初始化为空，构造器中完成初始化
-        this.add(mp);    //把面板就是游戏绘制区域添加进来
-        this.setSize(1000, 750);
-        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-        this.setVisible(true);
-    }
-}
Index: src/com/lizhuo/tankgame4/Shot.java
===================================================================
--- src/com/lizhuo/tankgame4/Shot.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame4/Shot.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,54 +0,0 @@
-package com.lizhuo.tankgame4;
-
-/**
- *射击的子弹
- */
-public class Shot implements Runnable{
-    int x;    //子弹x坐标
-    int y;    //子弹y坐标
-    int direct = 0;    //子弹方向
-    int speed = 2;    //子弹速度
-    boolean isLive = true;    //子弹是否存活
-
-    public Shot(int x, int y, int direct) {
-        this.x = x;
-        this.y = y;
-        this.direct = direct;
-    }
-
-    @Override
-    public void run() {     //射击
-        while (true) {
-            //休眠50ms为了看到子弹的效果
-            try {
-                Thread.sleep(50);
-            } catch (InterruptedException e) {
-                e.printStackTrace();
-            }
-            //根据方向改变x, y的坐标
-            switch (direct) {
-                case 0://上
-                    y -= speed;
-                    break;
-                case 1://右
-                    x += speed;
-                    break;
-                case 2://下
-                    y += speed;
-                    break;
-                case 3://左
-                    x -= speed;
-                    break;
-            }
-            //测试,这里输出x, y 坐标
-            System.out.println("子弹 x=" + x + "y=" + y);
-            //当子弹移动到面板的边界时, 就应该销毁(把启动的子弹的线程销毁)
-            if (!(x >= 0 && x <= 1000 && y >= 0 && y <= 750)) {
-                System.out.println("子弹线程退出");
-                isLive = false;
-                break;
-            }
-        }
-
-    }
-}
Index: src/com/lizhuo/tankgame3/Shot.java
===================================================================
--- src/com/lizhuo/tankgame3/Shot.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame3/Shot.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,54 +0,0 @@
-package com.lizhuo.tankgame3;
-
-/**
- *射击的子弹
- */
-public class Shot implements Runnable{
-    int x;    //子弹x坐标
-    int y;    //子弹y坐标
-    int direct = 0;    //子弹方向
-    int speed = 2;    //子弹速度
-    boolean isLive = true;    //子弹是否存活
-
-    public Shot(int x, int y, int direct) {
-        this.x = x;
-        this.y = y;
-        this.direct = direct;
-    }
-
-    @Override
-    public void run() {     //射击
-        while (true) {
-            //休眠50ms为了看到子弹的效果
-            try {
-                Thread.sleep(50);
-            } catch (InterruptedException e) {
-                e.printStackTrace();
-            }
-            //根据方向改变x, y的坐标
-            switch (direct) {
-                case 0://上
-                    y -= speed;
-                    break;
-                case 1://右
-                    x += speed;
-                    break;
-                case 2://下
-                    y += speed;
-                    break;
-                case 3://左
-                    x -= speed;
-                    break;
-            }
-            //测试,这里输出x, y 坐标
-            System.out.println("子弹 x=" + x + "y=" + y);
-            //当子弹移动到面板的边界时, 就应该销毁(把启动的子弹的线程销毁)
-            if (!(x >= 0 && x <= 1000 && y >= 0 && y <= 750)) {
-                System.out.println("子弹线程退出");
-                isLive = false;
-                break;
-            }
-        }
-
-    }
-}
Index: src/com/lizhuo/tankgame4/Hero.java
===================================================================
--- src/com/lizhuo/tankgame4/Hero.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame4/Hero.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,35 +0,0 @@
-package com.lizhuo.tankgame4;
-
-/**
- *自己的坦克
- */
-public class Hero extends Tank {
-    //定义一个Shot对象,表示一个射击(线程)
-    Shot shot = null;
-
-    public Hero(int x, int y) {
-        super(x, y);
-    }
-
-    //射击
-    public void shotEnemyTank() {
-        //创建 Shot 对象, 根据当前 Hero 对象的位置和方向来创建Shot
-        switch (getDirect()){     //得到Hero对象的方向
-            case 0: //向上
-                shot = new Shot(getX() + 20, getY(), 0);
-                break;
-            case 1: //向右
-                shot = new Shot(getX() + 60, getY() + 20, 1);
-                break;
-            case 2: //向下
-                shot = new Shot(getX() + 20, getY() + 60, 2);
-                break;
-            case 3: //向左
-                shot = new Shot(getX(), getY() + 20, 3);
-                break;
-        }
-        //启动我的Shot线程
-        new Thread(shot).start();
-
-    }
-}
Index: src/com/lizhuo/tankgame3/lzTankGame03.java
===================================================================
--- src/com/lizhuo/tankgame3/lzTankGame03.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame3/lzTankGame03.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,28 +0,0 @@
-package com.lizhuo.tankgame3;
-
-import javax.swing.*;
-
-/**
- *画框
- */
-public class lzTankGame03 extends JFrame {
-
-    //定义MyPanel
-    MyPanel mp = null;
-
-    public static void main(String[] args) {
-        lzTankGame03 lzTankGame01 = new lzTankGame03();
-
-    }
-
-    public lzTankGame03() {
-        mp = new MyPanel();    //初始化为空，构造器中完成初始化
-        //将mp放入到Thread, 并启动
-        new Thread(mp).start();
-        this.add(mp);    //把面板就是游戏绘制区域添加进来
-        this.setSize(1000, 750);
-        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-        this.addKeyListener(mp);    //让JFrame监听键盘事件
-        this.setVisible(true);
-    }
-}
Index: src/com/lizhuo/tankgame4/EnemyTank.java
===================================================================
--- src/com/lizhuo/tankgame4/EnemyTank.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame4/EnemyTank.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,16 +0,0 @@
-package com.lizhuo.tankgame4;
-
-import java.util.Vector;
-
-/**
- *敌人坦克
- */
-public class EnemyTank extends Tank {
-
-    //在敌人坦克类, 使用Vector 保存多个Shot
-    Vector<Shot> shots = new Vector<>();
-
-    public EnemyTank(int x, int y) {
-        super(x, y);
-    }
-}
Index: src/com/lizhuo/tankgame1/Tank.java
===================================================================
--- src/com/lizhuo/tankgame1/Tank.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame1/Tank.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,33 +0,0 @@
-package com.lizhuo.tankgame1;
-
-/**
- *
- */
-
-public class Tank {
-    private int x;    //坦克的横坐标
-    private int y;    //坦克的纵坐标
-
-    public Tank(int x, int y) {
-        this.x = x;
-        this.y = y;
-    }
-
-    public int getX() {
-        return x;
-    }
-
-    public void setX(int x) {
-        this.x = x;
-    }
-
-    public int getY() {
-        return y;
-    }
-
-    public void setY(int y) {
-        this.y = y;
-    }
-}
-
-
Index: src/com/lizhuo/tankgame1/Hero.java
===================================================================
--- src/com/lizhuo/tankgame1/Hero.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame1/Hero.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,11 +0,0 @@
-package com.lizhuo.tankgame1;
-
-/**
- *自己的坦克
- */
-public class Hero extends Tank {
-
-    public Hero(int x, int y) {
-        super(x, y);
-    }
-}
Index: src/com/lizhuo/tankgame3/MyPanel.java
===================================================================
--- src/com/lizhuo/tankgame3/MyPanel.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame3/MyPanel.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,161 +0,0 @@
-package com.lizhuo.tankgame3;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.KeyEvent;
-import java.awt.event.KeyListener;
-import java.util.Vector;
-
-/**
- * 坦克大战的绘图区域（画板）
- */
-//为了响应键盘事件，实现keyListener
-//为了让Panel 不停的重绘子弹, 需要将 MyPanel 实现 Runnable 接口, 当作一个线程使用
-public class MyPanel extends JPanel implements KeyListener, Runnable {
-    //定义我的坦克
-    Hero hero = null;
-    //定义敌人坦克, 方到Vector中为了线程安全
-    Vector<EnemyTank> enemyTanks = new Vector<>();
-    int enemyTanksSize = 3;    //初始敌人坦克数量
-
-    public MyPanel() {
-        this.hero = new Hero(100, 100);    //初始化自己的坦克
-        hero.setSpeed(1);    //设置坦克速度, 默认是1;
-        //初始化敌人坦克
-        for (int i = 0; i < enemyTanksSize; i++) {
-            //创建一个敌人坦克
-            EnemyTank enemyTank = new EnemyTank(100 * (i + 1), 0);
-            //设置方向
-            enemyTank.setDirect(2);
-            //加入
-            enemyTanks.add(enemyTank);
-        }
-    }
-
-    @Override
-    @SuppressWarnings("all")
-    public void paint(Graphics g) {
-        super.paint(g);
-        g.fillRect(0, 0, 1000, 750);    //填充矩形，默认是黑色
-        //画出坦克-封装方法
-        drawTank(hero.getX(), hero.getY(), g, hero.getDirect(), 1);
-        for (EnemyTank enemyTank : enemyTanks) {
-            drawTank(enemyTank.getX(), enemyTank.getY(), g, enemyTank.getDirect(), 0);
-        }
-
-        //画出hero射击的子弹
-        if (hero.shot != null && hero.shot.isLive == true) {
-            g.draw3DRect(hero.shot.x, hero.shot.y, 1, 1, false);
-        }
-    }
-
-    //编写方法，画出坦克
-    /**
-     * @param x      坦克的左上角x坐标
-     * @param y      坦克的左上角y坐标
-     * @param g      画笔
-     * @param direct 坦克的方向
-     * @param type   坦克类型 (用颜色标记我的坦克，还是敌人的坦克)
-     */
-    @SuppressWarnings("all")
-    public void drawTank(int x, int y, Graphics g, int direct, int type) {
-        switch (type) {
-            case 0:    //敌方坦克
-                g.setColor(Color.cyan);
-                break;
-            case 1:    //我方坦克
-                g.setColor(Color.yellow);
-                break;
-
-        }
-
-        switch (direct) {
-            case 0: //表示向上
-                g.fill3DRect(x, y, 10, 60, false);//画出坦克左边轮子
-                g.fill3DRect(x + 30, y, 10, 60, false);//画出坦克右边轮子
-                g.fill3DRect(x + 10, y + 10, 20, 40, false);//画出坦克盖子
-                g.fillOval(x + 10, y + 20, 20, 20);//画出圆形盖子
-                g.drawLine(x + 20, y + 30, x + 20, y);//画出炮筒
-                break;
-            case 1: //表示向右
-                g.fill3DRect(x, y, 60, 10, false);//画出坦克上边轮子
-                g.fill3DRect(x, y + 30, 60, 10, false);//画出坦克下边轮子
-                g.fill3DRect(x + 10, y + 10, 40, 20, false);//画出坦克盖子
-                g.fillOval(x + 20, y + 10, 20, 20);//画出圆形盖子
-                g.drawLine(x + 30, y + 20, x + 60, y + 20);//画出炮筒
-                break;
-            case 2: //表示向下
-                g.fill3DRect(x, y, 10, 60, false);//画出坦克左边轮子
-                g.fill3DRect(x + 30, y, 10, 60, false);//画出坦克右边轮子
-                g.fill3DRect(x + 10, y + 10, 20, 40, false);//画出坦克盖子
-                g.fillOval(x + 10, y + 20, 20, 20);//画出圆形盖子
-                g.drawLine(x + 20, y + 30, x + 20, y + 60);//画出炮筒
-                break;
-            case 3: //表示向左
-                g.fill3DRect(x, y, 60, 10, false);//画出坦克上边轮子
-                g.fill3DRect(x, y + 30, 60, 10, false);//画出坦克下边轮子
-                g.fill3DRect(x + 10, y + 10, 40, 20, false);//画出坦克盖子
-                g.fillOval(x + 20, y + 10, 20, 20);//画出圆形盖子
-                g.drawLine(x + 30, y + 20, x, y + 20);//画出炮筒
-                break;
-            default:
-                System.out.println("暂时不处理");
-
-        }
-    }
-
-    @Override
-    public void keyTyped(KeyEvent e) {
-
-    }
-
-    //处理wsad按下的情况
-
-    @Override
-    @SuppressWarnings("all")
-    public void keyPressed(KeyEvent e) {
-        if (e.getExtendedKeyCode() == KeyEvent.VK_W) {    //按下W键
-            //改变坦克的方向
-            hero.setDirect(0);
-            //修改坦克的坐标
-            hero.moveUp();
-
-        } else if (e.getExtendedKeyCode() == KeyEvent.VK_D) {    //按下D键
-            //改变坦克的方向
-            hero.setDirect(1);
-            hero.moveRight();
-        } else if (e.getExtendedKeyCode() == KeyEvent.VK_S) {    //按下S键
-            //改变坦克的方向
-            hero.setDirect(2);
-            hero.moveDown();
-        } else if (e.getExtendedKeyCode() == KeyEvent.VK_A) {    //按下A键
-            //改变坦克的方向
-            hero.setDirect(3);
-            hero.moveLeft();
-        }
-
-        //如果用户按下的时J, 就发射
-        if (e.getExtendedKeyCode() == KeyEvent.VK_J) {
-            System.out.println("用户按下了J键, 开始射击");
-            hero.shotEnemyTank();
-        }
-        this.repaint();
-    }
-
-    @Override
-    public void keyReleased(KeyEvent e) {
-
-    }
-
-    @Override
-    public void run() {     //每隔 100毫秒, 重绘区域, 刷新绘图区域, 子弹就移动
-        while (true) {
-            try {
-                Thread.sleep(100);
-            } catch (InterruptedException e) {
-                e.printStackTrace();
-            }
-            this.repaint();
-        }
-    }
-}
Index: src/com/lizhuo/tankgame1/MyPanel.java
===================================================================
--- src/com/lizhuo/tankgame1/MyPanel.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame1/MyPanel.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,55 +0,0 @@
-package com.lizhuo.tankgame1;
-
-import javax.swing.*;
-import java.awt.*;
-
-/**
- * 坦克大战的绘图区域（画板）
- */
-public class MyPanel extends JPanel {
-    //定义我的坦克
-    Hero hero = null;
-
-    public MyPanel() {
-        this.hero = new Hero(100, 100);    //初始化自己的坦克
-    }
-
-    @Override
-    public void paint(Graphics g) {
-        super.paint(g);
-        g.fillRect(0, 0, 1000, 750);    //填充矩形，默认是黑色
-        //画出坦克-封装方法
-        drawTank(hero.getX(), hero.getY(), g, 0, 0);
-    }
-
-    //编写方法，画出坦克
-    /**
-     * @param x      坦克的左上角x坐标
-     * @param y      坦克的左上角y坐标
-     * @param g      画笔
-     * @param direct 坦克的方向
-     * @param type   坦克类型 (用颜色标记我的坦克，还是敌人的坦克)
-     */
-    public void drawTank(int x, int y, Graphics g, int direct, int type) {
-        switch (type) {
-            case 0:    //我方坦克
-                g.setColor(Color.cyan);
-                break;
-            case 1:    //敌方坦克
-                g.setColor(Color.yellow);
-                break;
-        }
-
-        switch (direct) {
-            case 0:    //默认向上
-                g.fill3DRect(x, y, 10, 60, false);//画出坦克左边轮子
-                g.fill3DRect(x + 30, y, 10, 60, false);//画出坦克右边轮子
-                g.fill3DRect(x + 10, y + 10, 20, 40, false);//画出坦克盖子
-                g.fillOval(x + 10, y + 20, 20, 20);//画出圆形盖子
-                g.drawLine(x + 20, y + 30, x + 20, y);//画出炮筒
-            default:
-                System.out.println("暂时不处理");
-
-        }
-    }
-}
Index: src/com/lizhuo/tankgame4/lzTankGame04.java
===================================================================
--- src/com/lizhuo/tankgame4/lzTankGame04.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame4/lzTankGame04.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,28 +0,0 @@
-package com.lizhuo.tankgame4;
-
-import javax.swing.*;
-
-/**
- *画框
- */
-public class lzTankGame04 extends JFrame {
-
-    //定义MyPanel
-    MyPanel mp = null;
-
-    public static void main(String[] args) {
-        lzTankGame04 lzTankGame01 = new lzTankGame04();
-
-    }
-
-    public lzTankGame04() {
-        mp = new MyPanel();    //初始化为空，构造器中完成初始化
-        //将mp放入到Thread, 并启动
-        new Thread(mp).start();
-        this.add(mp);    //把面板就是游戏绘制区域添加进来
-        this.setSize(1000, 750);
-        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-        this.addKeyListener(mp);    //让JFrame监听键盘事件
-        this.setVisible(true);
-    }
-}
Index: src/com/lizhuo/tankgame2/MyPanel.java
===================================================================
--- src/com/lizhuo/tankgame2/MyPanel.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
+++ src/com/lizhuo/tankgame2/MyPanel.java	(revision ae722c8b69b1f40fb6d067e4fdafab8657038bd4)
@@ -1,133 +0,0 @@
-package com.lizhuo.tankgame2;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.KeyEvent;
-import java.awt.event.KeyListener;
-import java.util.Vector;
-
-/**
- * 坦克大战的绘图区域（画板）
- */
-//为了响应键盘事件，实现keyListener
-public class MyPanel extends JPanel implements KeyListener {
-    //定义我的坦克
-    Hero hero = null;
-    //定义敌人坦克, 方到Vector中为了线程安全
-    Vector<EnemyTank> enemyTanks = new Vector<>();
-    int enemyTanksSize = 3;    //初始敌人坦克数量
-
-    public MyPanel() {
-        this.hero = new Hero(100, 100);    //初始化自己的坦克
-        hero.setSpeed(1);    //设置坦克速度, 默认是1;
-        //初始化敌人坦克
-        for (int i = 0; i < enemyTanksSize; i++) {
-            //创建一个敌人坦克
-            EnemyTank enemyTank = new EnemyTank(100 * (i + 1), 0);
-            //设置方向
-            enemyTank.setDirect(2);
-            //加入
-            enemyTanks.add(enemyTank);
-        }
-    }
-
-    @Override
-    public void paint(Graphics g) {
-        super.paint(g);
-        g.fillRect(0, 0, 1000, 750);    //填充矩形，默认是黑色
-        //画出坦克-封装方法
-        drawTank(hero.getX(), hero.getY(), g, hero.getDirect(), 1);
-        for (EnemyTank enemyTank : enemyTanks) {
-            drawTank(enemyTank.getX(), enemyTank.getY(), g, enemyTank.getDirect(), 0);
-        }
-    }
-
-    //编写方法，画出坦克
-    /**
-     * @param x      坦克的左上角x坐标
-     * @param y      坦克的左上角y坐标
-     * @param g      画笔
-     * @param direct 坦克的方向
-     * @param type   坦克类型 (用颜色标记我的坦克，还是敌人的坦克)
-     */
-    public void drawTank(int x, int y, Graphics g, int direct, int type) {
-        switch (type) {
-            case 0:    //敌方坦克
-                g.setColor(Color.cyan);
-                break;
-            case 1:    //我方坦克
-                g.setColor(Color.yellow);
-                break;
-
-        }
-
-        switch (direct) {
-            case 0: //表示向上
-                g.fill3DRect(x, y, 10, 60, false);//画出坦克左边轮子
-                g.fill3DRect(x + 30, y, 10, 60, false);//画出坦克右边轮子
-                g.fill3DRect(x + 10, y + 10, 20, 40, false);//画出坦克盖子
-                g.fillOval(x + 10, y + 20, 20, 20);//画出圆形盖子
-                g.drawLine(x + 20, y + 30, x + 20, y);//画出炮筒
-                break;
-            case 1: //表示向右
-                g.fill3DRect(x, y, 60, 10, false);//画出坦克上边轮子
-                g.fill3DRect(x, y + 30, 60, 10, false);//画出坦克下边轮子
-                g.fill3DRect(x + 10, y + 10, 40, 20, false);//画出坦克盖子
-                g.fillOval(x + 20, y + 10, 20, 20);//画出圆形盖子
-                g.drawLine(x + 30, y + 20, x + 60, y + 20);//画出炮筒
-                break;
-            case 2: //表示向下
-                g.fill3DRect(x, y, 10, 60, false);//画出坦克左边轮子
-                g.fill3DRect(x + 30, y, 10, 60, false);//画出坦克右边轮子
-                g.fill3DRect(x + 10, y + 10, 20, 40, false);//画出坦克盖子
-                g.fillOval(x + 10, y + 20, 20, 20);//画出圆形盖子
-                g.drawLine(x + 20, y + 30, x + 20, y + 60);//画出炮筒
-                break;
-            case 3: //表示向左
-                g.fill3DRect(x, y, 60, 10, false);//画出坦克上边轮子
-                g.fill3DRect(x, y + 30, 60, 10, false);//画出坦克下边轮子
-                g.fill3DRect(x + 10, y + 10, 40, 20, false);//画出坦克盖子
-                g.fillOval(x + 20, y + 10, 20, 20);//画出圆形盖子
-                g.drawLine(x + 30, y + 20, x, y + 20);//画出炮筒
-                break;
-            default:
-                System.out.println("暂时不处理");
-
-        }
-    }
-
-    @Override
-    public void keyTyped(KeyEvent e) {
-
-    }
-
-    //处理wsad按下的情况
-    @Override
-    public void keyPressed(KeyEvent e) {
-        if (e.getExtendedKeyCode() == KeyEvent.VK_W) {    //按下W键
-            //改变坦克的方向
-            hero.setDirect(0);
-            //修改坦克的坐标
-            hero.moveUp();
-
-        } else if (e.getExtendedKeyCode() == KeyEvent.VK_D) {    //按下D键
-            //改变坦克的方向
-            hero.setDirect(1);
-            hero.moveRight();
-        } else if (e.getExtendedKeyCode() == KeyEvent.VK_S) {    //按下S键
-            //改变坦克的方向
-            hero.setDirect(2);
-            hero.moveDown();
-        } else if (e.getExtendedKeyCode() == KeyEvent.VK_A) {    //按下A键
-            //改变坦克的方向
-            hero.setDirect(3);
-            hero.moveLeft();
-        }
-        this.repaint();
-    }
-
-    @Override
-    public void keyReleased(KeyEvent e) {
-
-    }
-}
