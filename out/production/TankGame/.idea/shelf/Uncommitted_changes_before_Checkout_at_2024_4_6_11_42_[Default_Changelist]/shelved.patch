Index: src/com/lizhuo/tankgame4/Hero.java
===================================================================
--- src/com/lizhuo/tankgame4/Hero.java	(revision 92fe108fb155a415456ba9fda5599f81f9bf083e)
+++ src/com/lizhuo/tankgame4/Hero.java	(revision 92fe108fb155a415456ba9fda5599f81f9bf083e)
@@ -1,38 +0,0 @@
-package com.lizhuo.tankgame4;
-
-import java.util.Vector;
-
-/**
- *自己的坦克
- */
-public class Hero extends Tank {
-    //定义一个Shot对象,表示一个射击(线程)
-    Shot shot = null;
-
-    public Hero(int x, int y) {
-        super(x, y);
-    }
-
-    //射击
-    public void shotEnemyTank() {
-        //创建 Shot 对象, 根据当前 Hero 对象的位置和方向来创建Shot
-        switch (getDirect()){     //得到Hero对象的方向
-            case 0: //向上
-                shot = new Shot(getX() + 20, getY(), 0);
-                break;
-            case 1: //向右
-                shot = new Shot(getX() + 60, getY() + 20, 1);
-                break;
-            case 2: //向下
-                shot = new Shot(getX() + 20, getY() + 60, 2);
-                break;
-            case 3: //向左
-                shot = new Shot(getX(), getY() + 20, 3);
-                break;
-        }
-
-        //启动我的Shot线程
-        new Thread(shot).start();
-
-    }
-}
Index: TankGame.iml
===================================================================
--- TankGame.iml	(revision 92fe108fb155a415456ba9fda5599f81f9bf083e)
+++ TankGame.iml	(revision 92fe108fb155a415456ba9fda5599f81f9bf083e)
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
-    </content>
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-</module>
\ No newline at end of file
Index: .idea/uiDesigner.xml
===================================================================
--- .idea/uiDesigner.xml	(revision 92fe108fb155a415456ba9fda5599f81f9bf083e)
+++ .idea/uiDesigner.xml	(revision 92fe108fb155a415456ba9fda5599f81f9bf083e)
@@ -1,124 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="Palette2">
-    <group name="Swing">
-      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
-      </item>
-      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
-        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
-        <initial-values>
-          <property name="text" value="Button" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="RadioButton" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="CheckBox" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="Label" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
-          <preferred-size width="-1" height="20" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
-      </item>
-    </group>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(revision 92fe108fb155a415456ba9fda5599f81f9bf083e)
+++ .idea/modules.xml	(revision 92fe108fb155a415456ba9fda5599f81f9bf083e)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/TankGame.iml" filepath="$PROJECT_DIR$/TankGame.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/.gitignore
===================================================================
--- .idea/.gitignore	(revision 92fe108fb155a415456ba9fda5599f81f9bf083e)
+++ .idea/.gitignore	(revision 92fe108fb155a415456ba9fda5599f81f9bf083e)
@@ -1,8 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Datasource local storage ignored files
-/../../../../../../:\Users\19443\IdeaProjects\TankGame\.idea/dataSources/
-/dataSources.local.xml
-# Editor-based HTTP Client requests
-/httpRequests/
Index: src/com/lizhuo/tankgame4/Tank.java
===================================================================
--- src/com/lizhuo/tankgame4/Tank.java	(revision 92fe108fb155a415456ba9fda5599f81f9bf083e)
+++ src/com/lizhuo/tankgame4/Tank.java	(revision 92fe108fb155a415456ba9fda5599f81f9bf083e)
@@ -1,69 +0,0 @@
-package com.lizhuo.tankgame4;
-
-/**
- *
- */
-
-public class Tank {
-    private int x;    //坦克的横坐标
-    private int y;    //坦克的纵坐标
-    private int direct;    //坦克方向
-    private int speed = 1;    //坦克速度
-
-    public Tank(int x, int y) {
-        this.x = x;
-        this.y = y;
-
-    }
-
-    //增加坦克的移动方法
-    public void moveUp() {
-        this.y -= speed;
-    }
-
-    public void moveRight() {
-        this.x += speed;
-    }
-
-    public void moveDown() {
-        this.y += speed;
-    }
-
-    public void moveLeft() {
-        this.x -= speed;
-    }
-
-    public int getSpeed() {
-        return speed;
-    }
-
-    public void setSpeed(int speed) {
-        this.speed = speed;
-    }
-
-    public int getDirect() {
-        return direct;
-    }
-
-    public void setDirect(int direct) {
-        this.direct = direct;
-    }
-
-    public int getX() {
-        return x;
-    }
-
-    public void setX(int x) {
-        this.x = x;
-    }
-
-    public int getY() {
-        return y;
-    }
-
-    public void setY(int y) {
-        this.y = y;
-    }
-}
-
-
Index: src/com/lizhuo/tankgame4/MyPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lizhuo.tankgame4;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.KeyEvent;\r\nimport java.awt.event.KeyListener;\r\nimport java.util.Vector;\r\n\r\n\r\n/**\r\n * 坦克大战的绘图区域（画板）\r\n */\r\n//为了响应键盘事件，实现keyListener\r\n//为了让Panel 不停的重绘子弹, 需要将 MyPanel 实现 Runnable 接口, 当作一个线程使用\r\npublic class MyPanel extends JPanel implements KeyListener, Runnable {\r\n    //定义我的坦克\r\n    Hero hero = null;\r\n    //定义敌人坦克, 方到Vector中为了线程安全\r\n    Vector<EnemyTank> enemyTanks = new Vector<>();\r\n    int enemyTanksSize = 3;    //初始敌人坦克数量\r\n    //说明: 当子弹击中坦克时, 加入一个Bomb对象到bombs\r\n    Vector<Bomb> bombs = new Vector<>();    //定义一个Vector, 用于存放炸弹\r\n\r\n    //定义三张炸弹图片， 用于显示爆炸效果\r\n    Image image1 = null;\r\n    Image image2 = null;\r\n    Image image3 = null;\r\n\r\n    public MyPanel() {\r\n        this.hero = new Hero(100, 100);    //初始化自己的坦克\r\n        hero.setSpeed(1);    //设置坦克速度, 默认是1;\r\n        //初始化敌人坦克\r\n        for (int i = 0; i < enemyTanksSize; i++) {\r\n            //创建一个敌人坦克\r\n            EnemyTank enemyTank = new EnemyTank(100 * (i + 1), 0);\r\n            //设置方向\r\n            enemyTank.setDirect(2);\r\n            //启动敌人坦克线程, 让他动起来\r\n            new Thread(enemyTank).start();\r\n            //给该enemyTank加入一颗子弹\r\n            Shot shot = new Shot(enemyTank.getX() + 20, enemyTank.getY() + 60, enemyTank.getDirect());\r\n            //加入enemyTank的Vector成员\r\n            enemyTank.shots.add(shot);\r\n            //启动shot对象\r\n            new Thread(shot).start();\r\n            //加入\r\n            enemyTanks.add(enemyTank);\r\n        }\r\n        //初始化图片对象\r\n        image1 = Toolkit.getDefaultToolkit().getImage(Panel.class.getResource(\"/bomb_1.gif\"));\r\n        image2 = Toolkit.getDefaultToolkit().getImage(Panel.class.getResource(\"/bomb_2.gif\"));\r\n        image3 = Toolkit.getDefaultToolkit().getImage(Panel.class.getResource(\"/bomb_3.gif\"));\r\n\r\n    }\r\n\r\n    @Override\r\n    @SuppressWarnings(\"all\")\r\n    public void paint(Graphics g) {\r\n        super.paint(g);\r\n        g.fillRect(0, 0, 1000, 750);    //填充矩形，默认是黑色\r\n        //画出坦克-封装方法\r\n        drawTank(hero.getX(), hero.getY(), g, hero.getDirect(), 1);    //画出我方坦克\r\n\r\n        for (EnemyTank enemyTank : enemyTanks) {    //画出敌人坦克\r\n            //判断当前坦克是否还存活\r\n            if (enemyTank.isLive) {\r\n                drawTank(enemyTank.getX(), enemyTank.getY(), g, enemyTank.getDirect(), 0);\r\n                //画出 enemyTank 所有的子弹\r\n                for (int i = 0; i < enemyTank.shots.size(); i++) {\r\n                    //取出子弹\r\n                    Shot shot = enemyTank.shots.get(i);\r\n                    //绘制\r\n                    if (shot.isLive) {\r\n                        g.draw3DRect(shot.x, shot.y, 1, 1, false);\r\n                    } else {\r\n                        //从Vector移除\r\n                        enemyTank.shots.remove(shot);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //画出hero射击的子弹\r\n        if (hero.shot != null && hero.shot.isLive == true) {\r\n            g.draw3DRect(hero.shot.x, hero.shot.y, 1, 1, false);\r\n        }\r\n\r\n        //如果bombs中 有对象, 就画出\r\n        for (int i = 0; i < bombs.size(); i++) {\r\n            //取出炸弹\r\n            Bomb bomb = bombs.get(i);\r\n            //根据当前这个bomb对象的life值去画出对应的图片\r\n            if (bomb.life > 6) {\r\n                g.drawImage(image1, bomb.x, bomb.y, 60, 60, this);\r\n            } else if (bomb.life > 3) {\r\n                g.drawImage(image1, bomb.x, bomb.y, 60, 60, this);\r\n            } else {\r\n                g.drawImage(image1, bomb.x, bomb.y, 60, 60, this);\r\n            }\r\n            //让炸弹的生命值减少\r\n            bomb.lifeDown();\r\n            //如果炸弹的生命值为0, 就从bombs的集合中删除\r\n            if (bomb.life == 0) {\r\n                bombs.remove(bomb);\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    //编写方法，画出坦克\r\n\r\n    /**\r\n     * @param x      坦克的左上角x坐标\r\n     * @param y      坦克的左上角y坐标\r\n     * @param g      画笔\r\n     * @param direct 坦克的方向\r\n     * @param type   坦克类型 (用颜色标记我的坦克，还是敌人的坦克)\r\n     */\r\n    @SuppressWarnings(\"all\")\r\n    public void drawTank(int x, int y, Graphics g, int direct, int type) {\r\n        switch (type) {\r\n            case 0:    //敌方坦克\r\n                g.setColor(Color.cyan);\r\n                break;\r\n            case 1:    //我方坦克\r\n                g.setColor(Color.yellow);\r\n                break;\r\n\r\n        }\r\n\r\n        switch (direct) {\r\n            case 0: //表示向上\r\n                g.fill3DRect(x, y, 10, 60, false);//画出坦克左边轮子\r\n                g.fill3DRect(x + 30, y, 10, 60, false);//画出坦克右边轮子\r\n                g.fill3DRect(x + 10, y + 10, 20, 40, false);//画出坦克盖子\r\n                g.fillOval(x + 10, y + 20, 20, 20);//画出圆形盖子\r\n                g.drawLine(x + 20, y + 30, x + 20, y);//画出炮筒\r\n                break;\r\n            case 1: //表示向右\r\n                g.fill3DRect(x, y, 60, 10, false);//画出坦克上边轮子\r\n                g.fill3DRect(x, y + 30, 60, 10, false);//画出坦克下边轮子\r\n                g.fill3DRect(x + 10, y + 10, 40, 20, false);//画出坦克盖子\r\n                g.fillOval(x + 20, y + 10, 20, 20);//画出圆形盖子\r\n                g.drawLine(x + 30, y + 20, x + 60, y + 20);//画出炮筒\r\n                break;\r\n            case 2: //表示向下\r\n                g.fill3DRect(x, y, 10, 60, false);//画出坦克左边轮子\r\n                g.fill3DRect(x + 30, y, 10, 60, false);//画出坦克右边轮子\r\n                g.fill3DRect(x + 10, y + 10, 20, 40, false);//画出坦克盖子\r\n                g.fillOval(x + 10, y + 20, 20, 20);//画出圆形盖子\r\n                g.drawLine(x + 20, y + 30, x + 20, y + 60);//画出炮筒\r\n                break;\r\n            case 3: //表示向左\r\n                g.fill3DRect(x, y, 60, 10, false);//画出坦克上边轮子\r\n                g.fill3DRect(x, y + 30, 60, 10, false);//画出坦克下边轮子\r\n                g.fill3DRect(x + 10, y + 10, 40, 20, false);//画出坦克盖子\r\n                g.fillOval(x + 20, y + 10, 20, 20);//画出圆形盖子\r\n                g.drawLine(x + 30, y + 20, x, y + 20);//画出炮筒\r\n                break;\r\n            default:\r\n                System.out.println(\"暂时不处理\");\r\n\r\n        }\r\n    }\r\n\r\n    //编写方法，判断我方的子弹是否击中敌人\r\n    //最好在run方法中判断\r\n    public void hitTank(Shot s, EnemyTank enemyTank) {\r\n        //判断子弹集中坦克\r\n        switch (enemyTank.getDirect()) {\r\n            case 0:    //坦克向上\r\n            case 2:    //坦克向下\r\n                if (s.x > enemyTank.getX() && s.x < enemyTank.getX() + 40 &&\r\n                        s.y > enemyTank.getY() && s.y < enemyTank.getY() + 60) {\r\n                    s.isLive = false;\r\n                    enemyTank.isLive = false;\r\n                    //当我的子弹击中敌人坦克后, 将enemyTank 从Vector中拿掉\r\n                    enemyTanks.remove(enemyTank);\r\n                    //创建Bomb对象, 加入到bombs中\r\n                    Bomb bomb = new Bomb(enemyTank.getX(), enemyTank.getY());\r\n                    bombs.add(bomb);\r\n                }\r\n                break;\r\n            case 1:    //坦克向右\r\n            case 3:    //坦克向左\r\n                if (s.x > enemyTank.getX() && s.x < enemyTank.getX() + 60 &&\r\n                        s.y > enemyTank.getY() && s.y < enemyTank.getY() + 40) {\r\n                    s.isLive = false;\r\n                    enemyTank.isLive = false;\r\n                    //当我的子弹击中敌人坦克后, 将enemyTank 从Vector中拿掉\r\n                    enemyTanks.remove(enemyTank);\r\n                    //创建Bomb对象, 加入到bombs中\r\n                    Bomb bomb = new Bomb(enemyTank.getX(), enemyTank.getY());\r\n                    bombs.add(bomb);\r\n                }\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void keyTyped(KeyEvent e) {\r\n\r\n    }\r\n\r\n    //处理wsad按下的情况\r\n\r\n    @Override\r\n    @SuppressWarnings(\"all\")\r\n    public void keyPressed(KeyEvent e) {\r\n        if (e.getExtendedKeyCode() == KeyEvent.VK_W) {    //按下W键\r\n            //改变坦克的方向\r\n            hero.setDirect(0);\r\n            //修改坦克的坐标\r\n            if (hero.getY() > 0) {\r\n                hero.moveUp();\r\n            }\r\n\r\n        } else if (e.getExtendedKeyCode() == KeyEvent.VK_D) {    //按下D键\r\n            //改变坦克的方向\r\n            hero.setDirect(1);\r\n            if (hero.getX() + 60 < 1000) {\r\n                hero.moveRight();\r\n            }\r\n        } else if (e.getExtendedKeyCode() == KeyEvent.VK_S) {    //按下S键\r\n            //改变坦克的方向\r\n            hero.setDirect(2);\r\n            if (hero.getY() + 60 < 750) {\r\n                hero.moveDown();\r\n            }\r\n        } else if (e.getExtendedKeyCode() == KeyEvent.VK_A) {    //按下A键\r\n            //改变坦克的方向\r\n            hero.setDirect(3);\r\n            if (hero.getX() > 0) {\r\n                hero.moveLeft();\r\n            }\r\n        }\r\n\r\n        //如果用户按下的时J, 就发射\r\n        if (e.getExtendedKeyCode() == KeyEvent.VK_J) {\r\n            //发射一颗子弹\r\n            //判断hero的子弹是否销毁 第一次为空才触发子弹, 第二次使用判断子弹打到边界没有存活才触发\r\n            if (hero.shot == null || !hero.shot.isLive) {\r\n                hero.shotEnemyTank();\r\n            }\r\n\r\n        }\r\n        this.repaint();\r\n    }\r\n\r\n    @Override\r\n    public void keyReleased(KeyEvent e) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void run() {     //每隔 100毫秒, 重绘区域, 刷新绘图区域, 子弹就移动\r\n        while (true) {\r\n            try {\r\n                Thread.sleep(100);\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n            //判断是否集中了敌人坦克\r\n            if (hero.shot != null && hero.shot.isLive) {    //当我的子弹还存活\r\n                //遍历敌人所有的坦克\r\n                for (int i = 0; i < enemyTanks.size(); i++) {\r\n                    EnemyTank enemyTank = enemyTanks.get(i);\r\n                    hitTank(hero.shot, enemyTank);\r\n                }\r\n            }\r\n\r\n            this.repaint();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/lizhuo/tankgame4/MyPanel.java	(revision 92fe108fb155a415456ba9fda5599f81f9bf083e)
+++ src/com/lizhuo/tankgame4/MyPanel.java	(date 1712374442307)
@@ -239,12 +239,10 @@
 
         //如果用户按下的时J, 就发射
         if (e.getExtendedKeyCode() == KeyEvent.VK_J) {
-            //发射一颗子弹
             //判断hero的子弹是否销毁 第一次为空才触发子弹, 第二次使用判断子弹打到边界没有存活才触发
             if (hero.shot == null || !hero.shot.isLive) {
                 hero.shotEnemyTank();
             }
-
         }
         this.repaint();
     }
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GitSharedSettings\">\r\n    <option name=\"FORCE_PUSH_PROHIBITED_PATTERNS\">\r\n      <list />\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(revision 92fe108fb155a415456ba9fda5599f81f9bf083e)
+++ .idea/vcs.xml	(date 1712374391707)
@@ -1,10 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="GitSharedSettings">
-    <option name="FORCE_PUSH_PROHIBITED_PATTERNS">
-      <list />
-    </option>
-  </component>
   <component name="VcsDirectoryMappings">
     <mapping directory="$PROJECT_DIR$" vcs="Git" />
   </component>
